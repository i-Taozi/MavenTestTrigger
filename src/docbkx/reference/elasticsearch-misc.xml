<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="elasticsearch.misc">
	<title>Miscellaneous Elasticsearch Operation Support</title>
	<abstract>
		<para>
			This chapter covers additional support for Elasticsearch operations
            that cannot be directly accessed via the repository
			interface.
			It is recommended to add those operations as custom
			implementation as
			described in
			<xref linkend="repositories.custom-implementations" />
			.
		</para>
	</abstract>
	<section id="elasticsearch.misc.filter">
		<title>Filter Builder</title>
		<para>
			Filter Builder improves query speed.
		</para>
		<example>
<programlisting language="java">
private ElasticsearchTemplate elasticsearchTemplate;
SearchQuery searchQuery = new NativeSearchQueryBuilder()
.withQuery(matchAllQuery())
.withFilter(boolFilter().must(termFilter("id", documentId)))
.build();
Page&lt;SampleEntity&gt; sampleEntities = elasticsearchTemplate.queryForPage(searchQuery,SampleEntity.class);
</programlisting>
		</example>
	</section>
    <section id="elasticsearch.scan.and.scroll">
        <title>Using Scan And Scroll For Big Result Set</title>
        <para>
            Elasticsearch has scan and scroll feature for getting big result set in chunks.
            <interfacename>ElasticsearchTemplate</interfacename>
            has scan and scroll methods that can be used as below.
        </para>
        <example>
            <title>
                Using Scan and Scroll
            </title>
            <programlisting language="java">
SearchQuery searchQuery = new NativeSearchQueryBuilder()
.withQuery(matchAllQuery())
.withIndices("test-index")
.withTypes("test-type")
.withPageable(new PageRequest(0,1))
.build();
String scrollId = elasticsearchTemplate.scan(searchQuery,1000,false);
List&lt;SampleEntity&gt; sampleEntities = new ArrayList&lt;SampleEntity&gt;();
boolean hasRecords = true;
while (hasRecords){
Page&lt;SampleEntity&gt; page = elasticsearchTemplate.scroll(scrollId, 5000L , new ResultsMapper&lt;SampleEntity&gt;() {
@Override
public Page&lt;SampleEntity&gt; mapResults(SearchResponse response) {
List&lt;SampleEntity&gt; chunk = new ArrayList&lt;SampleEntity&gt;();
for(SearchHit searchHit : response.getHits()){
 if(response.getHits().getHits().length &lt;= 0) {
   return null;
 }
 SampleEntity user = new SampleEntity();
 user.setId(searchHit.getId());
 user.setMessage((String)searchHit.getSource().get("message"));
 chunk.add(user);
 }
 return new PageImpl&lt;SampleEntity&gt;(chunk);
}
 });
   if(page != null) {
   sampleEntities.addAll(page.getContent());
   hasRecords = page.hasNextPage();
  }
  else{
   hasRecords = false;
  }
 }
}</programlisting>
        </example>
    </section>
</chapter>