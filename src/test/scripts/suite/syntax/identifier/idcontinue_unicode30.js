/*
 * Copyright (c) Andr√© Bargull
 * Alle Rechte vorbehalten / All Rights Reserved.  Use is subject to license terms.
 *
 * <https://github.com/anba/es6draft>
 */
function test(start, end) {
  for (let cp = start; cp <= end;) {
    let source = "var obj = {};\n";
    for (let i = 0; cp <= end && i < 1000; ++cp, ++i) {
      source += `obj.A${String.fromCodePoint(cp)};\n`;
    }
    eval(source);
  }
}

// Delta compared to Unicode 2.0
test(0x00f8, 0x01ba);
test(0x01bc, 0x01bf);
test(0x01c0, 0x01c3);
test(0x01c4, 0x021f);
test(0x0222, 0x0233);
test(0x0250, 0x02ad);
test(0x02ee, 0x02ee);
test(0x0300, 0x034e);
test(0x0360, 0x0362);
test(0x03d0, 0x03d7);
test(0x03da, 0x03f3);
test(0x0400, 0x0481);
test(0x048c, 0x04c4);
test(0x04d0, 0x04f5);
test(0x064b, 0x0655);
test(0x0671, 0x06d3);
test(0x06fa, 0x06fc);
test(0x0710, 0x0710);
test(0x0711, 0x0711);
test(0x0712, 0x072c);
test(0x0730, 0x074a);
test(0x0780, 0x07a5);
test(0x07a6, 0x07b0);
test(0x0950, 0x0950);
test(0x0ad0, 0x0ad0);
test(0x0d82, 0x0d83);
test(0x0d85, 0x0d96);
test(0x0d9a, 0x0db1);
test(0x0db3, 0x0dbb);
test(0x0dbd, 0x0dbd);
test(0x0dc0, 0x0dc6);
test(0x0dca, 0x0dca);
test(0x0dcf, 0x0dd1);
test(0x0dd2, 0x0dd4);
test(0x0dd6, 0x0dd6);
test(0x0dd8, 0x0ddf);
test(0x0df2, 0x0df3);
test(0x0e01, 0x0e30);
test(0x0ead, 0x0eb0);
test(0x0f00, 0x0f00);
test(0x0f49, 0x0f6a);
test(0x0f86, 0x0f87);
test(0x0f88, 0x0f8b);
test(0x0f90, 0x0f97);
test(0x0f99, 0x0fbc);
test(0x0fc6, 0x0fc6);
test(0x1000, 0x1021);
test(0x1023, 0x1027);
test(0x1029, 0x102a);
test(0x102c, 0x102c);
test(0x102d, 0x1030);
test(0x1031, 0x1031);
test(0x1032, 0x1032);
test(0x1036, 0x1037);
test(0x1038, 0x1038);
test(0x1039, 0x1039);
test(0x1040, 0x1049);
test(0x1050, 0x1055);
test(0x1056, 0x1057);
test(0x1058, 0x1059);
test(0x1200, 0x1206);
test(0x1208, 0x1246);
test(0x1248, 0x1248);
test(0x124a, 0x124d);
test(0x1250, 0x1256);
test(0x1258, 0x1258);
test(0x125a, 0x125d);
test(0x1260, 0x1286);
test(0x1288, 0x1288);
test(0x128a, 0x128d);
test(0x1290, 0x12ae);
test(0x12b0, 0x12b0);
test(0x12b2, 0x12b5);
test(0x12b8, 0x12be);
test(0x12c0, 0x12c0);
test(0x12c2, 0x12c5);
test(0x12c8, 0x12ce);
test(0x12d0, 0x12d6);
test(0x12d8, 0x12ee);
test(0x12f0, 0x130e);
test(0x1310, 0x1310);
test(0x1312, 0x1315);
test(0x1318, 0x131e);
test(0x1320, 0x1346);
test(0x1348, 0x135a);
test(0x1369, 0x1371);
test(0x13a0, 0x13f4);
test(0x1401, 0x166c);
test(0x166f, 0x1676);
test(0x1681, 0x169a);
test(0x16a0, 0x16ea);
test(0x1780, 0x17b3);
test(0x17b4, 0x17b6);
test(0x17b7, 0x17bd);
test(0x17be, 0x17c5);
test(0x17c6, 0x17c6);
test(0x17c7, 0x17c8);
test(0x17c9, 0x17d3);
test(0x17e0, 0x17e9);
test(0x1810, 0x1819);
test(0x1820, 0x1842);
test(0x1843, 0x1843);
test(0x1844, 0x1877);
test(0x1880, 0x18a8);
test(0x18a9, 0x18a9);
test(0x2119, 0x211d);
test(0x212a, 0x212d);
test(0x212f, 0x2131);
test(0x2139, 0x2139);
test(0x2160, 0x2183);
test(0x3006, 0x3006);
test(0x3038, 0x303a);
test(0x309d, 0x309e);
// test(0x30fb, 0x30fb);
test(0x31a0, 0x31b7);
test(0x3400, 0x4db5);
test(0xa000, 0xa48c);
test(0xfb1d, 0xfb1d);
// test(0xff65, 0xff65);
