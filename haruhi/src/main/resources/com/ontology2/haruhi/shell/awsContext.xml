<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


  <!-- 3.0 Bean Definitions For Amazon EMR that the user almost certainly needs to change -->
  <!-- note that this all depends on a "awsCredentials" object being defined in your .haruhi/applicationContext.xml -->
  <!-- we're not going to reference this from inside Spring because we don't want to force you to set -->
  <!-- AWS credentials if you are not using AWS -->

  <bean name="awsCredentials" class="com.amazonaws.auth.AWSCredentials" abstract="true" />
  <bean name="sqsQueueUrl" class="java.lang.String" abstract="true" />
  <bean name="sqsClient" class="com.amazonaws.services.sqs.AmazonSQSClient" destroy-method="shutdown">
    <constructor-arg ref="awsCredentials" />
  </bean>

  <bean name="awsLogUri" class="java.lang.String">
    <constructor-arg value="s3://bakemono-logs/" />
  </bean>

  <bean name="localLogTarget" class="java.lang.String">
    <constructor-arg value="/freebase/logs/" />
  </bean>

  <bean name="awsSoftwareBucket" class="java.lang.String">
    <constructor-arg value="s3://bakemono-public/" />
  </bean>

  <bean name="awsBillingBucket" class="java.lang.String">
    <constructor-arg value="" />
  </bean>

  <bean name="emrClient" class="com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient">
    <constructor-arg ref="awsCredentials"/>
  </bean>

  <bean name="keyPairName" class="java.lang.String">
    <constructor-arg value="o2key" />
  </bean>

  <!-- Wiring for internal objects -->

  <bean name="ec2Client" class="com.amazonaws.services.ec2.AmazonEC2Client">
    <constructor-arg ref="awsCredentials"/>
  </bean>

  <bean name="s3Client" class="com.amazonaws.services.s3.AmazonS3Client">
    <constructor-arg ref="awsCredentials"/>
  </bean>

  <bean name="transferManager" class="com.amazonaws.services.s3.transfer.TransferManager" destroy-method="shutdownNow">
    <constructor-arg ref="s3Client"/>
    <constructor-arg>
      <bean class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
        <constructor-arg value="25" />
      </bean>
    </constructor-arg>
  </bean>

  <bean name="stepFactory" class="com.amazonaws.services.elasticmapreduce.util.StepFactory" />

  <bean name="debugStep" scope="prototype" class="com.amazonaws.services.elasticmapreduce.model.StepConfig">
    <property name="name" value="Enable Debugging" />
    <property name="actionOnFailure" value="TERMINATE_JOB_FLOW" />
    <property name="hadoopJarStep">
      <bean factory-bean="stepFactory" factory-method="newEnableDebuggingStep" />
    </property>
  </bean>

  <import resource="awsInstanceContext.xml"/>
  <import resource="awsClustersContext.xml"/>
</beans>