# --type.code is a parameter specifying a source database type. Accepted values for the type code option are:
# fully qualified type name, such as java.sql.Types.CLOB
# short type name, such as CLOB
# int constant for a required type, such as 2005 for CLOB type
# vendor specific int constant for a required type

# --type.name is a parameter for type name template with optional placeholders for a target type. For each
# corresponding type.code type.name template will be used for rendering final type name, i.e.
# --type.name=CLOB is rendered as CLOB
# --type.name=VARCHAR({N}) results in VARCHAR type where {N} placeholder is substituted by a value of size from source
# database type
# --type.name=NUMERIC({P},{S}) produces NUMERIC where {P} placeholder stands for precision & {S} is a scale of a
# source database type

# --type.size, --type.precision, --type.scale are optional parameters which define (if used) maximum (right) bound of
# size, precision, scale for a source type and allow to render different target type names depending on source type
# runtime attributes

# these below rules instruct the migrator to render CHAR, VARCHAR & CLOB source database types as STRING for
# every matching source column from a source database during schema generation step
# java.sql.Types.CHAR is rendered as STRING
--type.code=java.sql.Types.CHAR
--type.name=STRING
# java.sql.Types.VARCHAR is rendered as STRING
--type.code=java.sql.Types.VARCHAR
--type.name=STRING
# java.sql.Types.CLOB is rendered as STRING
--type.code=java.sql.Types.CLOB
--type.name=STRING